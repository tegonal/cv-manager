
services:

  proxy:
    image: caddy:2
    container_name: caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
#      - "9001:9001" # minio UI
#      - "9001:9001/udp"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy-data:/data
      - caddy-certs:/certs
    networks:
        - external
        - internal

  app:
    image: tegonal/cv-manager:latest
    container_name: app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      mongo:
        condition: service_healthy
      minio:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - internal

  mongo:
    image: mongo:8.0
    container_name: mongo
    restart: unless-stopped
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - .env
    volumes:
      - mongo-data:/data/db
    networks:
      - internal

  minio:
    image: minio/minio:latest
    container_name: minio
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "mc", "ready", "local" ]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - .env
    environment:
      - MINIO_ROOT_USER=${S3_ACCESS_KEY_ID}
      - MINIO_ROOT_PASSWORD=${S3_SECRET_ACCESS_KEY}
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    networks:
      - internal

  createbucket:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    env_file:
      - .env
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio ${S3_ENDPOINT} ${S3_SECRET_ACCESS_KEY} ${S3_ACCESS_KEY_ID};
      /usr/bin/mc mb myminio/${S3_BUCKET};
      exit 0;
      "
    networks:
      - internal

  gotenberg:
    image: gotenberg/gotenberg:8.17
    container_name: gotenberg
    command:
      - "gotenberg"
      - "--libreoffice-auto-start=false"
      - "--libreoffice-disable-routes=true"
      - "--chromium-auto-start=true"
      - "--chromium-ignore-certificate-errors=true"
      - "--chromium-clear-cache=true"
      - "--chromium-disable-web-security=true"
      - "--prometheus-disable-collect=true"
      - "--webhook-disable=true"
      - "--pdfengines-disable-routes=true"      
      #- "--log-level=debug"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000/health" ]
      interval: 30s
      timeout: 20s
      retries: 3
    env_file:
      - .env
    networks:
     - internal

volumes:
  caddy-data:
  caddy-certs:
  minio-data:
  mongo-data:

networks:
  internal:
    driver: bridge
  external:
    driver: bridge
