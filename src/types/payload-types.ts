/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "UserOrganisations".
 */
export type UserOrganisations =
  | {
      organisation: number | Organisation;
      roles: ('admin' | 'user')[];
      id?: string | null;
    }[]
  | null;
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SocialLinks".
 */
export type SocialLinks =
  | {
      platform: 'linkedin' | 'x' | 'mastodon' | 'facebook' | 'github';
      url: string;
      id?: string | null;
    }[]
  | null;

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    cv: Cv;
    users: User;
    skill: Skill;
    level: Level;
    company: Company;
    project: Project;
    media: Media;
    organisations: Organisation;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  locale: 'de';
  user: User & {
    collection: 'users';
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cv".
 */
export interface Cv {
  id: number;
  fullName: string;
  birthday: string;
  nationalityStatus?: string | null;
  image?: (number | null) | Media;
  phoneNumber?: string | null;
  email: string;
  jobTitle: string;
  department?: string | null;
  links?: SocialLinks;
  introduction: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  languages?:
    | {
        language: number | Skill;
        level: number | Level;
        id?: string | null;
      }[]
    | null;
  technologies?:
    | {
        skill: number | Skill;
        level: number | Level;
        id?: string | null;
      }[]
    | null;
  softSkills?:
    | {
        softSkill: number | Skill;
        level: number | Level;
        id?: string | null;
      }[]
    | null;
  otherSkills?:
    | {
        name: string;
        level: number | Level;
        id?: string | null;
      }[]
    | null;
  edu?:
    | {
        institution: string;
        fromYear: string;
        toYear: string;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  certs?:
    | {
        name: string;
        toYear: string;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  courses?:
    | {
        name: string;
        toYear: string;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  projects?:
    | {
        company: number | Company;
        project: number | Project;
        fromYear: string;
        toYear: string;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  organisation?: (number | null) | Organisation;
  createdBy?: (number | null) | User;
  updatedBy?: (number | null) | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  organisation?: (number | null) | Organisation;
  createdBy?: (number | null) | User;
  updatedBy?: (number | null) | User;
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    tablet?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "organisations".
 */
export interface Organisation {
  id: number;
  name: string;
  description?: string | null;
  createdBy?: (number | null) | User;
  updatedBy?: (number | null) | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  firstName?: string | null;
  lastName?: string | null;
  roles: ('admin' | 'user')[];
  organisations?: UserOrganisations;
  selectedOrganisation?: (number | null) | Organisation;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "skill".
 */
export interface Skill {
  id: number;
  name?: string | null;
  skillType?: ('technical' | 'language' | 'soft') | null;
  organisation?: (number | null) | Organisation;
  createdBy?: (number | null) | User;
  updatedBy?: (number | null) | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "level".
 */
export interface Level {
  id: number;
  level?: string | null;
  levelType?: ('language' | 'skill')[] | null;
  points?: number | null;
  organisation?: (number | null) | Organisation;
  createdBy?: (number | null) | User;
  updatedBy?: (number | null) | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "company".
 */
export interface Company {
  id: number;
  name?: string | null;
  organisation?: (number | null) | Organisation;
  createdBy?: (number | null) | User;
  updatedBy?: (number | null) | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "project".
 */
export interface Project {
  id: number;
  name?: string | null;
  organisation?: (number | null) | Organisation;
  createdBy?: (number | null) | User;
  updatedBy?: (number | null) | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}